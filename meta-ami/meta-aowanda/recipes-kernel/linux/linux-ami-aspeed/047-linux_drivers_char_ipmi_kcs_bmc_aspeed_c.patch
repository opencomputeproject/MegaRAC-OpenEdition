--- linux/drivers/char/ipmi/kcs_bmc_aspeed.c	2020-12-21 16:36:05.762526166 +0800
+++ linux/drivers/char/ipmi/kcs_bmc_aspeed.c	2021-01-11 17:31:17.000000000 +0800
@@ -53,13 +53,22 @@
 #define LPC_STR3             0x044
 
 /* mapped to lpc-host@80 IO space */
-#define LPC_HICRB            0x080
-#define     LPC_HICRB_IBFIF4         BIT(1)
-#define     LPC_HICRB_LPC4E          BIT(0)
-#define LPC_LADR4            0x090
-#define LPC_IDR4             0x094
-#define LPC_ODR4             0x098
-#define LPC_STR4             0x09C
+#define LPC_HICRB            0x100
+#define     LPC_HICRB_EN16LADR2         BIT(5)
+#define     LPC_HICRB_EN16LADR1         BIT(4)
+#define     LPC_HICRB_IBFIF4            BIT(1)
+#define     LPC_HICRB_LPC4E             BIT(0)
+#define LPC_LADR4            0x110
+#define LPC_IDR4             0x114
+#define LPC_ODR4             0x118
+#define LPC_STR4             0x11C
+#define     LPC_STR4_STAT_MASK          GENMASK(7, 6)
+#define     LPC_STR4_STAT_SHIFT         6
+#define LPC_LSADR12          0x120
+#define     LPC_LSADR12_STS_ADDR2_MASK  GENMASK(31, 16)
+#define     LPC_LSADR12_STS_ADDR2_SHIFT 16
+#define     LPC_LSADR12_STS_ADDR1_MASK  GENMASK(15, 0)
+#define     LPC_LSADR12_STS_ADDR1_SHIFT 0
 
 struct aspeed_kcs_bmc {
 	struct regmap *map;
@@ -107,17 +116,27 @@
 
 	switch (kcs_bmc->channel) {
 	case 1:
+		regmap_update_bits(priv->map, LPC_HICRB,
+				LPC_HICRB_EN16LADR1, LPC_HICRB_EN16LADR1);
 		regmap_update_bits(priv->map, LPC_HICR4,
 				LPC_HICR4_LADR12AS, 0);
 		regmap_write(priv->map, LPC_LADR12H, addr >> 8);
 		regmap_write(priv->map, LPC_LADR12L, addr & 0xFF);
+		regmap_update_bits(priv->map, LPC_LSADR12,
+				LPC_LSADR12_STS_ADDR1_MASK,
+				(u32)(addr + 1) << LPC_LSADR12_STS_ADDR1_SHIFT);
 		break;
 
 	case 2:
+		regmap_update_bits(priv->map, LPC_HICRB,
+				LPC_HICRB_EN16LADR2, LPC_HICRB_EN16LADR2);
 		regmap_update_bits(priv->map, LPC_HICR4,
 				LPC_HICR4_LADR12AS, LPC_HICR4_LADR12AS);
 		regmap_write(priv->map, LPC_LADR12H, addr >> 8);
 		regmap_write(priv->map, LPC_LADR12L, addr & 0xFF);
+		regmap_update_bits(priv->map, LPC_LSADR12,
+				LPC_LSADR12_STS_ADDR2_MASK,
+				(u32)(addr + 1) << LPC_LSADR12_STS_ADDR2_SHIFT);
 		break;
 
 	case 3:
@@ -187,10 +206,13 @@
 		break;
 
 	case 4:
-		if (enable)
+		if (enable) {
 			regmap_update_bits(priv->map, LPC_HICRB,
 					LPC_HICRB_IBFIF4 | LPC_HICRB_LPC4E,
 					LPC_HICRB_IBFIF4 | LPC_HICRB_LPC4E);
+			regmap_update_bits(priv->map, LPC_STR4,
+					LPC_STR4_STAT_MASK, 0x0);
+		}
 		else
 			regmap_update_bits(priv->map, LPC_HICRB,
 					LPC_HICRB_IBFIF4 | LPC_HICRB_LPC4E,
